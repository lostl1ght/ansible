- name: install zsh
  become: true
  ansible.builtin.apt:
    name: zsh
    state: present
  when: ansible_os_family == "Debian"

- name: sync zshrc (remote)
  ansible.builtin.copy:
    src: .zshrc
    dest: ~/.zshrc
    force: true
    backup: true
  when: not ansible_connection == "local"

- name: link zshrc (local)
  ansible.builtin.file:
    src: '{{ playbook_dir }}/roles/shell/files/.zshrc'
    path: ~/.zshrc
    state: link
  when: ansible_connection == "local"

- name: sync zshenv (remote)
  ansible.builtin.copy:
    src: .zshenv
    dest: ~/.zshenv
    force: true
    backup: true
  when: not ansible_connection == "local"

- name: link zshenv (local)
  ansible.builtin.file:
    src: '{{ playbook_dir }}/roles/shell/files/.zshenv'
    path: ~/.zshenv
    state: link
  when: ansible_connection == "local"

- name: sync zlogout (remote)
  ansible.builtin.copy:
    src: .zlogout
    dest: ~/.zlogout
    force: true
    backup: true
  when: not ansible_connection == "local"

- name: link zlogout (local)
  ansible.builtin.file:
    src: '{{ playbook_dir }}/roles/shell/files/.zlogout'
    path: ~/.zlogout
    state: link
  when: ansible_connection == "local"

- name: sync zimrc (remote)
  ansible.builtin.copy:
    src: .zimrc
    dest: ~/.zimrc
    force: true
    backup: true
  when: not ansible_connection == "local"

- name: link zimrc (local)
  ansible.builtin.file:
    src: '{{ playbook_dir }}/roles/shell/files/.zimrc'
    path: ~/.zimrc
    state: link
  when: ansible_connection == "local"

- name: sync ignore (remote)
  ansible.builtin.copy:
    src: .ignore
    dest: ~/.ignore
    force: true
    backup: true
  when: not ansible_connection == "local"

- name: link ignore (local)
  ansible.builtin.file:
    src: '{{ playbook_dir }}/roles/shell/files/.ignore'
    path: ~/.ignore
    state: link
  when: ansible_connection == "local"

- name: ensure ~/.config exists
  ansible.builtin.file:
    path: ~/.config
    state: directory

- name: sync zimfw (remote)
  ansible.posix.synchronize:
    src: zimfw
    dest: ~/.config
    delete: true
  when: not ansible_connection == "local"

- name: link zimfw (local)
  ansible.builtin.file:
    src: '{{ playbook_dir }}/roles/shell/files/zimfw'
    path: ~/.config/zimfw
    state: link
  when: ansible_connection == "local"

- name: find zsh scripts
  ansible.builtin.find:
    paths: ~/.config/zimfw
    recurse: true
    patterns: '*.zsh'
  register: zsh_scripts

- name: compile zsh scripts
  ansible.builtin.shell:
    cmd: zcompile {{ item.path }}
    executable: '/usr/bin/zsh'
  loop: '{{ zsh_scripts.files }}'

- name: get starship
  become: true
  ansible.builtin.unarchive:
    src: https://github.com/starship/starship/releases/latest/download/starship-x86_64-unknown-linux-gnu.tar.gz
    dest: /usr/local/bin
    creates: /usr/local/bin/starship
    remote_src: true
    mode: '0755'
    owner: root
    group: root

- name: sync starship config (remote)
  ansible.builtin.copy:
    src: starship.toml
    dest: ~/.config/
    force: true
    backup: true
  when: not ansible_connection == "local"

- name: link starship config (local)
  ansible.builtin.file:
    src: '{{ playbook_dir }}/roles/shell/files/starship.toml'
    path: ~/.config/starship.toml
    state: link
  when: ansible_connection == "local"

- name: get eza
  become: true
  ansible.builtin.unarchive:
    src: https://github.com/eza-community/eza/releases/latest/download/eza_x86_64-unknown-linux-musl.tar.gz
    dest: /usr/local/bin
    creates: /usr/local/bin/eza
    extra_opts:
      - --strip-components=1
      - ./eza
    remote_src: true
    mode: '0755'
    owner: root
    group: root

- name: bat version
  ansible.builtin.uri:
    url: https://api.github.com/repos/sharkdp/bat/releases/latest
    # headers:
    #   Authorization: '{{ token }}'
  register: repo

- name: get bat
  become: true
  ansible.builtin.unarchive:
    src: https://github.com/sharkdp/bat/releases/latest/download/bat-{{ repo.json.tag_name }}-x86_64-unknown-linux-gnu.tar.gz
    dest: /usr/local/bin
    creates: /usr/local/bin/bat
    extra_opts:
      - --strip-components=1
      - bat-{{ repo.json.tag_name }}-x86_64-unknown-linux-gnu/bat
    remote_src: true
    mode: '0755'
    owner: root
    group: root

- name: sync bat config (remote)
  ansible.builtin.copy:
    src: bat/config
    dest: ~/.config/bat/
    force: true
    backup: true
  when: not ansible_connection == "local"

- name: link bat config (local)
  ansible.builtin.file:
    src: '{{ playbook_dir }}/roles/shell/files/bat'
    path: ~/.config/bat
    state: link
  when: ansible_connection == "local"

- name: zoxide version
  ansible.builtin.uri:
    url: https://api.github.com/repos/ajeetdsouza/zoxide/releases/latest
    # headers:
    #   Authorization: '{{ token }}'
  register: repo

- name: get zoxide
  become: true
  ansible.builtin.unarchive:
    src: https://github.com/ajeetdsouza/zoxide/releases/latest/download/zoxide-{{ repo.json.tag_name | replace("v", "") }}-x86_64-unknown-linux-musl.tar.gz
    dest: /usr/local/bin
    creates: /usr/local/bin/zoxide
    include: zoxide
    remote_src: true
    mode: '0755'
    owner: root
    group: root

- name: fzf version
  ansible.builtin.uri:
    url: https://api.github.com/repos/junegunn/fzf/releases/latest
    # headers:
    #   Authorization: '{{ token }}'
  register: repo

- name: get fzf
  become: true
  ansible.builtin.unarchive:
    src: https://github.com/junegunn/fzf/releases/latest/download/fzf-{{ repo.json.tag_name }}-linux_amd64.tar.gz
    dest: /usr/local/bin
    creates: /usr/local/bin/fzf
    remote_src: true
    mode: '0755'
    owner: root
    group: root

- name: lazygit version
  ansible.builtin.uri:
    url: https://api.github.com/repos/jesseduffield/lazygit/releases/latest
    # headers:
    #   Authorization: '{{ token }}'
  register: repo

- name: get lazygit
  become: true
  ansible.builtin.unarchive:
    src: https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_{{ repo.json.tag_name | replace("v","") }}_Linux_x86_64.tar.gz
    dest: /usr/local/bin
    creates: /usr/local/bin/lazygit
    include: lazygit
    remote_src: true
    mode: '0755'
    owner: root
    group: root

- name: sync lazygit config (remote)
  ansible.builtin.copy:
    src: lazygit/config.yml
    dest: ~/.config/lazygit/
    force: true
    backup: true
  when: not ansible_connection == "local"

- name: link lazygit config (local)
  ansible.builtin.file:
    src: '{{ playbook_dir }}/roles/shell/files/lazygit'
    path: ~/.config/lazygit
    state: link
  when: ansible_connection == "local"

- name: delta version
  ansible.builtin.uri:
    url: https://api.github.com/repos/dandavison/delta/releases/latest
    # headers:
    #   Authorization: '{{ token }}'
  register: repo

- name: get delta
  become: true
  ansible.builtin.unarchive:
    src: https://github.com/dandavison/delta/releases/latest/download/delta-{{ repo.json.tag_name }}-x86_64-unknown-linux-gnu.tar.gz
    dest: /usr/local/bin
    creates: /usr/local/bin/delta
    extra_opts:
      - --strip-components=1
      - delta-{{ repo.json.tag_name }}-x86_64-unknown-linux-gnu/delta
    remote_src: true
    mode: '0755'
    owner: root
    group: root
